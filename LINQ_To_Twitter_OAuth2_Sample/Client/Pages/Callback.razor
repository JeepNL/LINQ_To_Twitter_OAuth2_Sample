@page "/l2tcallback"
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavMan
@inject HttpClient Http

@code {
    [Parameter][SupplyParameterFromQuery] public string access_token { get; set; }
    [Parameter][SupplyParameterFromQuery] public string refresh_token { get; set; }
    [Parameter][SupplyParameterFromQuery] public long expire_token_ticks { get; set; }
    [Parameter][SupplyParameterFromQuery] public string access_denied { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (access_denied != "true")
        {
            L2TBase l2tBase = new()
                {
                    AccessToken = access_token,
                    RefreshToken = refresh_token,
                    ExpireTokenTicks = expire_token_ticks
                };

            HttpResponseMessage responseMessage = await Http.PostAsJsonAsync("OAuth2/UserInfo", l2tBase);

            L2TBase userInfo = await responseMessage.Content.ReadFromJsonAsync<L2TBase>();
            l2tBase.UserId = userInfo.UserId;
            l2tBase.ScreenName = userInfo.ScreenName;
            l2tBase.Name = userInfo.Name;

            await localStorage.SetItemAsync<L2TBase>("l2t_base", l2tBase);
        }
        NavMan.NavigateTo("/");
    }
}
